package Days_0214;import java.io.*;import java.util.ArrayList;import java.util.List;import java.util.Scanner;/** * Created by admin on 2020/2/15. */public class Mytest_4 {    public static int[] mybook= new int[200];    public static List<MyBook> list = new ArrayList<>();    public static File file = new File("d:mybook");    public static void main(String[] args) {       // insertBook(list);        //addBook(list);        //delectBook(list);       // printBook(list);        //searchBook(list);       // menu();        if (!file.exists()){             insertBook(list);             save();        }else{            read();        }        menu();    }    public static void menu(){        System.out.println("请输入数字选择你想要的的操作（1-5）");        System.out.println("1、查看书籍");        System.out.println("2、删除书籍");        System.out.println("3、添加书籍");        System.out.println("4、查看所有书籍信息");        System.out.println("5、退出");        Scanner scanner=new Scanner(System.in);        int sc1 = scanner.nextInt();        switch (sc1){            case 1:                Scanner scanner2 = new Scanner(System.in);                System.out.println("请输入要查找的书名");                String name1 = scanner.next();                searchBook(list,name1);                break;            case 2:                Scanner scanner1 = new Scanner(System.in);                System.out.println("请输入要删除的书名");                String name=scanner.next();                delectBook(list,name);                break;            case 3:                addBook(list);                break;            case 4:                printBook(list);                break;            default:                System.exit(1);               break;        }    }    public static void insertBook(List<MyBook> books){        Scanner scanner = new Scanner(System.in);        System.out.println("请输入书的数量");        int n = scanner.nextInt();        for (int i = 0; i <n ; i++) {            MyBook book = new MyBook("书名" + i, 1.5, "出本社" + i, "作者" + i, "00" + i);            books.add(book);        }    }    public static void printBook(List<MyBook> books){        for (int i = 0; i <books.size() ; i++) {            System.out.println(books.get(i));        }        menu();    }    public static void searchBook(List<MyBook> books ,String name1){        for (int i = 0; i <books.size() ; i++) {            if (books.get(i).getName().equals(name1)){                System.out.println("查询成功");                System.out.println(books.get(i));                menu();                return;            }        }        System.out.println("查询失败");        menu();    }    public static void addBook (List<MyBook> books){        Scanner scanner = new Scanner(System.in);        System.out.println("请输入要添加的书名");        String aname= scanner.next();        System.out.println("请输入书的价钱");        Double aprice= scanner.nextDouble();        System.out.println("请输入书的出版社");        String apress= scanner.next();        System.out.println("请输入书的作者");        String aauthor= scanner.next();        System.out.println("请输入书的bookISBN");        String abookISBN= scanner.next();        MyBook addbook = new MyBook(aname,aprice,apress,aauthor,abookISBN);        books.add(addbook);        System.out.println("添加成功");        save();        menu();    }    public static void delectBook(List<MyBook> books ,String name){        for (int i = 1; i <books.size() ; i++) {            MyBook mybook = books.get(i);            if (mybook.getName().equals(name)){                books.remove(i);                System.out.println("删除成功");                save();                menu();                return;            }        }        System.out.println("删除失败");        menu();    }    public static void  save(){        OutputStream os=null;        ObjectOutputStream oos=null;        try {             os = new FileOutputStream(file);             oos = new ObjectOutputStream(os);             oos.writeObject(list);             oos.flush();             os.flush();        } catch (FileNotFoundException e) {            e.printStackTrace();        } catch (IOException e) {            e.printStackTrace();        }finally {                try {                    if(oos !=null)                        oos.close();                    if (os!=null)                        os.close();                } catch (IOException e) {                    e.printStackTrace();                }        }    }    public static void read(){        InputStream io=null;        ObjectInputStream oio=null;        try {              io=new FileInputStream(file);             oio= new ObjectInputStream(io);//需要进行序列化 implement  Serializable            list = (List<MyBook>) oio.readObject();        } catch (FileNotFoundException e) {            e.printStackTrace();        } catch (IOException e) {            e.printStackTrace();        } catch (ClassNotFoundException e) {            e.printStackTrace();        }finally {            try {                if (oio!=null)                   oio.close();                if (io!=null)                    io.close();            } catch (IOException e) {                e.printStackTrace();            }        }    }}