package Days_0212;import java.io.*;/** * Created by admin on 2020/2/12. */public class Io_1 {    public static void main(String[] args) {        //把d盘下的某个文件，放到d盘下的某个目录下     /*   File from = new File("d:/a.java");        File parent = new File("d:/a");        if (!parent.exists()){            parent.mkdirs();        }        File to = new File("d:/a/"+from.getName());        InputStream inputStream=null;        OutputStream outputStream=null;        byte[] b = new byte[1024];        try {           inputStream = new FileInputStream(from);           outputStream=new FileOutputStream(to);           int len=inputStream.read(b);           while (len!=-1){                outputStream.write(b,0,len);                outputStream.flush();                len = inputStream.read(b);           }            System.out.println("复制完成");        } catch (FileNotFoundException e) {            e.printStackTrace();        } catch (IOException e) {            e.printStackTrace();        }finally {            try {                if (outputStream!=null)                outputStream.close();                if (inputStream!=null)                inputStream.close();            } catch (IOException e) {                e.printStackTrace();            }        }*/        //创建一个对像写入到一个文件里面，并进行读写        /**         * 怎么样将一个java 对象保存到硬盘中         * OutputStream   ObjectOutputStream         * 该Java对象必须是可序列化对象         * 序列化 把一个对象转换为字节流或者字符流  这一个过程叫序列化         *         * 反序列化  把字节流和字符流转化为对象  这一过程叫反序列化         * 怎样让对象成为可序列化对象？？ 在类上 实现序列化的接口 即可 java.io Serializable         * 用时类上 必须有一个序列化 UID 干什么用的？？ 如果有两恶搞不同的类 都叫同一个名字，具有相同的属性         * 序列化UID 可以区分这两个是不同的对象         *         *         * */     /*   Student_1 st = new Student_1();        st.setAge(21);        st.setName("张三");        st.setHisClass("卓越1班");*/        File student = new File("d:/b.txt");       /* if (!student.exists()){            try {                student.createNewFile();            } catch (IOException e) {                e.printStackTrace();            }        }*/        //把Stuent的信息写入到文件中        /*OutputStream outputStream=null;        ObjectOutputStream objectOutputStream=null;        try {            outputStream = new FileOutputStream(student);             objectOutputStream = new ObjectOutputStream(outputStream);             objectOutputStream.writeObject(st);             objectOutputStream.flush();            System.out.println("写入成功");        } catch (FileNotFoundException e) {            e.printStackTrace();        } catch (IOException e) {            e.printStackTrace();        }finally {            try {                if (objectOutputStream!=null)                     objectOutputStream.close();                if (outputStream!=null)                    outputStream.close();            } catch (IOException e) {                e.printStackTrace();            }        }*/        InputStream inputStream = null;        ObjectInputStream objectInputStream = null;        try {            inputStream = new FileInputStream(student);            objectInputStream = new ObjectInputStream(inputStream);            Student_1 stu = (Student_1) objectInputStream.readObject();            System.out.println(stu);        } catch (FileNotFoundException e) {            e.printStackTrace();        } catch (IOException e) {            e.printStackTrace();        } catch (ClassNotFoundException e) {            e.printStackTrace();        } finally {            try {                if (objectInputStream != null)                    objectInputStream.close();                if (inputStream != null)                    inputStream.close();            } catch (IOException e) {                e.printStackTrace();            }        }    }}